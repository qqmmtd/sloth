#! /bin/bash
#
# Automatically generated by gen_bash_script v1.2
#
# export_to - export files or directories to destination
#
# Copyright (C) 2011 by Zhh
#
# Usage:
#           export_to [-h] [-i LIST] [-p STRIP] DIR
# 
#   Options:
#     -h: print this help
#     -i: a FILE include paths of sources, one path each line
#     -p: strip NUM prefix slashes
#
#   Arguments:
#     DIR: destination
#

#
# usage: get_abspath PATH
#
get_abspath ()
{		
	if [[ -d $1 ]]; then
		echo $(cd "$1"; pwd)
	elif [[ -f $1 ]]; then
		if [[ $1 == /* ]]; then
			echo $(cd "${1%/*}"; pwd)/${1##*/}
		else
			echo $(cd "./${1%/*}" &>/dev/null; pwd)/${1##*/}
		fi
	fi
}

export_to ()
{
	local TAG=${TAG:-${FUNCNAME[0]}}

	local field=2
	local dest
	local list
	local line
	local path

	OPTIND=1
	while getopts :p:i:h opt; do
		case $opt in
			p) field=$(($OPTARG+1));; # field=strip+1
			i) list=$OPTARG;;
			h) usage; return 0;;
		esac
	done
	shift $(($OPTIND-1))

	dest=${1:-.}

	if [[ -r $list ]]; then
		if [[ -d $dest ]]; then
			echo "$TAG: warning: directory $(get_abspath "$dest") existed."
			echo "$TAG: press Ctrl-C in 5 second to break..."
			sleep 5
		fi
		mkdir -pv "$dest"

		while read line; do
			path=$(get_abspath "$line")
			[[ -n $path ]] && echo "$path"
		done < "$list" > "$dest/export_to.list"
	fi

	[[ -d "$dest" ]] && dest=$(get_abspath "$dest")
	
	if [[ ! -f $dest/export_to.list ]]; then
		echo "$TAG: error: $dest/export_to.list: No such file."
		echo "$TAG: use parameter '-i' appoint a list file."
		return 1
	fi

	echo "$TAG: exporting..."
	while read line; do
		if [[ -e "$line" ]]; then
			path=$dest/$(echo "$line" | cut -d/ -f$field-)
			mkdir -vp "${path%/*}"
			cp -vru "$line" "$path"
		else
			echo "$TAG: warning: $line: No such file or directory."
		fi
	done < "$dest/export_to.list"
	echo "$TAG: done."

	return $?
}

# Script can be used as a program or a function
if echo $0 | grep -qvE '^[-]?bash'; then

	# Global VARs
	PRO=$(basename "$0")
	VER=1.0
	VBS=false
	TAG=$PRO

	# Show usage
	usage ()
	{
		cat << USAGE_END
$PRO v$VER
usage: $PRO [-i FILE] [-p NUM] DIR

       Export files or directories to destination.

       Options:
         -h: print this help
         -i: a FILE include paths of sources, one path each line
         -p: strip NUM prefix slashes

       Arguments:
         DIR: destination
USAGE_END

		return 0
	}

	# Main
	export_to "$@"
fi
