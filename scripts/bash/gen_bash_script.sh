#! /bin/bash
#
# gen_bash_script - generate bash script according a templete
#
# Copyright (C) 2011 by Zhh
#
# Usage:
#           gen_bash_script NAME 
#
#   Arguments:
#     NAME: begining with 'a-zA-Z' and '0-9a-zA-Z_'
#
#   Return:
#     0: success
#     1: miss argument or argument unavailable
#     2: file exists or can not be created
#

PROGRAM=$(basename "$0")
VERSION=1.2

usage ()
{
	echo "$PROGRAM: version $VERSION"
	echo "$PROGRAM: $PROGRAM NAME"
	return 0
}

if echo $1 | grep -qvE '^[a-zA-Z_][a-zA-Z0-9_]*$'; then
	echo "$PROGRAM: Unavailable name!"
	usage
	exit 1
fi

if [[ -e $1.sh ]]; then
	echo "$PROGRAM: File exists!"
	usage
	exit 2
fi

# Generate script
cat << EOF > $1.sh
#! /bin/bash
#
# Automatically generated by gen_bash_script v$VERSION
#
# $1 - TODO
#
# Copyright (C) 2011 by Zhh
#
# Usage:
#           $1 
# 
#   Options:
#
#   Arguments:
#

$1 ()
{
	# Verbose & TAG
	local VBS=\${VBS:-true}
	local TAG=\${TAG:-\${FUNCNAME[0]}}

	# TODO

	return \$?
}

# Script can be used as a program or a function
if echo \$0 | grep -qvE '^[-]?bash'; then

	# Global VARs
	PRO=\$(basename "\$0")
	VER=
	VBS=true
	TAG=\$PRO

	# Show usage
	usage ()
	{
		cat << USAGE_END
\$PRO v\$VER
usage: \$PRO 

       # TODO

       Options:
         
       Arguments:
USAGE_END

		return 0
	}

	# Main
	$1 "\$@"
fi
EOF

echo "$PROGRAM: Bash script $1.sh generated."
